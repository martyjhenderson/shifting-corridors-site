name: Deploy to AWS S3

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: shifting-corridors-lodge/package-lock.json

      - name: Install dependencies
        working-directory: shifting-corridors-lodge
        run: npm ci

      - name: Run tests
        working-directory: shifting-corridors-lodge
        run: npm test -- --coverage --watchAll=false

      - name: Build application
        working-directory: shifting-corridors-lodge
        run: npm run build

      - name: Verify build
        working-directory: shifting-corridors-lodge
        run: npm run verify-build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy static assets to S3
        working-directory: shifting-corridors-lodge
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public,max-age=31536000" \
            --exclude "*.html" \
            --exclude "service-worker.js" \
            --exclude "manifest.json"

      - name: Deploy HTML files to S3
        working-directory: shifting-corridors-lodge
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --cache-control "public,max-age=3600" \
            --include "*.html" \
            --include "service-worker.js" \
            --include "manifest.json"

      - name: Invalidate CloudFront cache
        if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üì¶ Build artifacts deployed to S3 bucket: ${{ secrets.S3_BUCKET_NAME }}"
          if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            echo "üåê CloudFront cache invalidated for distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          fi